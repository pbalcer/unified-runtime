name: E2E Nightly

on:
  schedule:
    # Run every day at 23:00 UTC
    - cron: '0 23 * * *'
  issue_comment:
    types: [created]

permissions:
  contents: read

jobs:
  e2e-build-hw:
    name: Build SYCL, UR, run E2E
    strategy:
      matrix:
        adapter: [
          {name: CUDA, str_name: cuda, prefix: "ext_oneapi_", config: "--cuda --hip", unit: "gpu"},
          {name: OPENCL, str_name: opencl, prefix: "", config: "", unit: "cpu"}
        ]
        build_type: [Release]
        compiler: [{c: clang, cxx: clang++}]

    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/e2e') }}
    #runs-on: ${{matrix.adapter.name}}
    runs-on: ubuntu-latest

    steps:
    - uses: xt0rted/pull-request-comment-branch@06f34cd2aa47e0aca6a68f9dcea2bc12e984ac41
      id: comment-branch

    - name: Checkout UR
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        path: ur-repo
        ref: ${{ steps.comment-branch.outputs.head_ref }}

    - name: Checkout SYCL
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        repository: intel/llvm
        ref: sycl
        path: sycl-repo

    - name: Install pip packages
      working-directory: ${{github.workspace}}/ur-repo
      run: git -P show --stat

    - name: Add comment to PR
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      if: always()
      with:
        script: |
          const name = '${{ github.workflow }}';
          const adapter = '${{ matrix.adapter.name }}';
          const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
          const success = '${{ job.status }}' === 'success';
          const body = `${name}: E2E ${adapter} ${success ? 'succeeded' : 'failed'}\n${url}`;

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          })
