name: Compute Benchmarks

on:
  workflow_dispatch:
    inputs:
      str_name:
        description: Formatted adapter name
        type: choice
        required: true
        default: 'level_zero'
        options:
          - level_zero
          - level_zero_v2
      unit:
        description: Test unit (cpu/gpu)
        type: choice
        required: true
        default: 'gpu'
        options:
          - cpu
          - gpu
      pr_no:
        description: PR number (if 0, it'll run on the main)
        type: number
        required: true
      bench_script_params:
        description: Parameters passed to script executing benchmark
        type: string
        required: false
        default: ''
      sycl_config_params:
        description: Extra params for SYCL configuration
        type: string
        required: false
        default: ''
      sycl_repo:
        description: 'Compiler repo'
        type: string
        required: true
        default: 'intel/llvm'
      sycl_commit:
        description: 'Compiler commit'
        type: string
        required: false
        default: ''
  schedule:
    - cron: '0 0 * * *'  # Runs at midnight UTC every day
  push:


permissions:
  contents: read
  pull-requests: write

jobs:
  manual:
    if: github.event_name != 'schedule'
    name: Manual Compute Benchmarks
    uses: ./.github/workflows/benchmarks-reusable.yml
    with:
      str_name: ${{ inputs.str_name }}
      unit: ${{ inputs.unit }}
      pr_no: ${{ inputs.pr_no }}
      bench_script_params: ${{ inputs.bench_script_params }}
      sycl_config_params: ${{ inputs.sycl_config_params }}
      sycl_repo: ${{ inputs.sycl_repo }}
      sycl_commit: ${{ inputs.sycl_commit }}

  nightly:
    if: github.event_name == 'schedule'
    name: Nightly Compute Benchmarks
    uses: ./.github/workflows/benchmarks-reusable.yml
    with:
      str_name: 'level_zero'
      unit: 'gpu'
      pr_no: 0
      bench_script_params: '--save baseline'
      sycl_config_params: ''
      sycl_repo: 'intel/llvm'
      sycl_commit: ''
